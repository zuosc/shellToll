---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zsc32137.
--- DateTime: 2018/11/20 12:19
--- 一个根据传入参数，原子性修改redis max memory size的lua脚本

local usedMemory
local maxMemory
local newMaxMemory

local setMemorySize = tonumber(ARGV[1])
local autoExtend = ARGV[2]
local threshold =  tonumber(ARGV[3])

local info = redis.call('info', 'Memory')

-- 获取当前的used_memory_rss和maxmemory
for line in info:gmatch("([^\n]*)\n?") do
    local data = line:match '^%s*(.*%S)' or ''
    if (data:find('used_memory_rss:') ~= nil)
    then
        local strStart
        local strEnd
        strStart, strEnd = data:find('used_memory_rss:')
        usedMemory = tonumber(data:sub(strEnd + 1, string.len(data)))
    end

    if (data:find('maxmemory:') ~= nil)
    then
        local strStart
        local strEnd
        strStart, strEnd = data:find('maxmemory:')
        maxMemory = tonumber(data:sub(strEnd + 1, string.len(data)))
    end
end

-- 当设置的和当前的一致时，不做任何操作
if (setMemorySize == maxMemory) then
    newMaxMemory = newMaxMemory
else
    -- 如果不是自动扩容，设置多少就是多少
    if (autoExtend == false) then
        newMaxMemory = setMemorySize
    else
        --自动扩容，分情况处理
        if (setMemorySize - usedMemory > threshold) then
            --设置的容量比使用的容量>阈值,则设置多少就是多少
            newMaxMemory = setMemorySize
        else
            --设置的容量比已经使用的容量差距不到阈值，则用已经使用的容量+阈值 为新容量
            newMaxMemory = usedMemory + threshold
        end
    end
    -- config命令被重写成config
    redis.call('config', 'set', 'maxmemory', tostring(newMaxMemory))
end

-- 返回一个json  方便vertX处理
return '{"maxMemory":' .. tostring(newMaxMemory) .. '}'
